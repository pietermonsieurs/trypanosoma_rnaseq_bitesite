## those data are produced in a separate script, and contain either a very
## basic life stage prediction, or a more in-depth (early-mid-late). The
## extended_celltype is the most accurate, and used for downstream analysis
## Howick data are produced using seurat_howick_integration.R, where the
## cluster number (from stage_pred) is converted to a biological stage
howick_dir = '/Users/pmonsieurs/programming/plasmodium_hiveseq/results/seurat/'
# howick_file = paste0(howick_dir, 'howick_data.rds')
howick_file = paste0(howick_dir, 'howick_data.extended_celltype.rds')
howick_data = readRDS(howick_file)
class(howick_data)
howick_data
library(Seurat)
howick_dir = '/Users/pmonsieurs/programming/plasmodium_hiveseq/results/seurat/'
# howick_file = paste0(howick_dir, 'howick_data.rds')
howick_file = paste0(howick_dir, 'howick_data.extended_celltype.rds')
howick_data = readRDS(howick_file)
hive_rds_file = paste0(out_dir, 'hive_data.rds')
out_dir = '/Users/pmonsieurs/programming/plasmodium_hiveseq/results/seurat/'
hive_rds_file = paste0(out_dir, 'hive_data.rds')
saveRDS(hive_data, hive_rds_file)
hive_data = readRDS(hive_rds_file)
DimPlot(howick_data,
label = FALSE,
reduction='umap')
View(howick_data)
DimPlot(howick_data,
label = FALSE,
reduction='umap',
group.by = 'celltype')
## read in the hive data from Erin
QC_data = howick_data@meta.data[, c('orig.ident', 'nCount_RNA', 'nFeature_RNA', 'percent.mito')]
## read in the hive data from Erin
QC_data = howick_data@meta.data[, c('orig.ident', 'nCount_RNA', 'nFeature_RNA')]
QC_data
p_count = ggplot(QC_data, aes(y=nCount_RNA, x=orig.ident)) +
geom_violin(aes(fill=orig.ident), alpha=1) +
theme_bw() +
coord_cartesian(ylim=c(0,3500)) +
scale_fill_manual(values = col.palette(8)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("UMIs per cell") +
ggtitle("Number of UMIs per cell") +
theme(plot.title = element_text(size = 12)) +
theme(legend.position = "none")
p_count
library(ggplot2)
p_count = ggplot(QC_data, aes(y=nCount_RNA, x=orig.ident)) +
geom_violin(aes(fill=orig.ident), alpha=1) +
theme_bw() +
coord_cartesian(ylim=c(0,3500)) +
scale_fill_manual(values = col.palette(8)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("UMIs per cell") +
ggtitle("Number of UMIs per cell") +
theme(plot.title = element_text(size = 12)) +
theme(legend.position = "none")
p_count = ggplot(QC_data, aes(y=nCount_RNA, x=orig.ident)) +
geom_violin(aes(fill=orig.ident), alpha=1) +
theme_bw() +
# coord_cartesian(ylim=c(0,3500)) +
# scale_fill_manual(values = col.palette(8)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("UMIs per cell") +
ggtitle("Number of UMIs per cell") +
theme(plot.title = element_text(size = 12)) +
theme(legend.position = "none")
p_count
p_feature = ggplot(QC_data, aes(y=nFeature_RNA, x=orig.ident)) +
geom_violin(aes(fill=orig.ident), alpha=1) +
theme_bw() +
# coord_cartesian(ylim=c(0,3500)) +
# scale_fill_manual(values = col.palette(8)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("UMIs per cell") +
ggtitle("Number of UMIs per cell") +
theme(plot.title = element_text(size = 12)) +
theme(legend.position = "none")
p_feature
p_count + p_feature
p_feature = ggplot(QC_data, aes(y=nFeature_RNA, x=orig.ident)) +
geom_violin(aes(fill=orig.ident), alpha=1) +
theme_bw() +
# coord_cartesian(ylim=c(0,3500)) +
# scale_fill_manual(values = col.palette(8)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("UMIs per cell") +
ggtitle("Number of genes expressed per cell") +
theme(plot.title = element_text(size = 12)) +
theme(legend.position = "none")
p_count + p_feature
DimPlot(howick_data,
label = FALSE,
reduction='umap',
group.by = 'celltype',
label.size=4,
pt.size = 0.2,
)
library(openxlsx)
## read in the data of Katlijn
biomarkers_files = '/Users/pmonsieurs/programming/plasmodium_10X_Katlijn/data/biomarkers.xlsx'
biomarkers = read.xlsx(biomarkers_files, sheet="no rlog")
?FeaturePlot()
biomarkers$X1
unique(biomarkers$biomarker.for...)
features_select = biomarkers[biomarkers$biomarker.for... == time_point,]$X1
features_select = biomarkers[biomarkers$biomarker.for... == time_point,]$X1
features_select = gsub("_", "-", features_select)
for (time_point in time_points) {
features_select = biomarkers[biomarkers$biomarker.for... == time_point,]$X1
features_select = gsub("_", "-", features_select)
FeaturePlot(howick_data, features=)
}
time_points = unique(biomarkers$biomarker.for...)
for (time_point in time_points) {
features_select = biomarkers[biomarkers$biomarker.for... == time_point,]$X1
features_select = gsub("_", "-", features_select)
FeaturePlot(howick_data, features=)
}
FeaturePlot(howick_data, features=features_select)
FeaturePlot(howick_data, features=features_select, ncol = 6)
FeaturePlot(howick_data, features=features_select, ncol = 5)
FeaturePlot(howick_data, features=features_select, ncol = 5) & scale_color_gradientn(colours = rev(viridis::inferno(20)))
ggsave(p, width=16, heigth=9, file= out_file)
out_file = paste0(out_dir, 'howick_biomarkers_', time_point, '.png')
ggsave(p, width=16, heigth=9, file= out_file)
p = FeaturePlot(howick_data, features=features_select, ncol = 5) & scale_color_gradientn(colours = rev(viridis::inferno(20)))
out_file = paste0(out_dir, 'howick_biomarkers_', time_point, '.png')
ggsave(p, width=16, heigth=9, file= out_file)
ggsave(p, width=16, height=9, file= out_file)
out_dir
## read in the data of Katlijn
biomarkers_files = '/Users/pmonsieurs/programming/plasmodium_10X_Katlijn/data/biomarkers.xlsx'
biomarkers = read.xlsx(biomarkers_files, sheet="no rlog")
out_dir = '/Users/pmonsieurs/programming/plasmodium_10X_Katlijn/results/biomarkers_timeseries/'
p = FeaturePlot(howick_data, features=features_select, ncol = 5) & scale_color_gradientn(colours = rev(viridis::inferno(20)))
out_file = paste0(out_dir, 'howick_biomarkers_', time_point, '.png')
ggsave(p, width=16, height=9, file= out_file)
for (time_point in time_points) {
features_select = biomarkers[biomarkers$biomarker.for... == time_point,]$X1
features_select = gsub("_", "-", features_select)
p = FeaturePlot(howick_data, features=features_select, ncol = 5) & scale_color_gradientn(colours = rev(viridis::inferno(20)))
out_file = paste0(out_dir, 'howick_biomarkers_', time_point, '.png')
ggsave(p, width=16, height=9, file= out_file)
}
## check the dim plot
p = DimPlot(howick_data,
label = FALSE,
reduction='umap',
group.by = 'celltype',
label.size=4,
pt.size = 0.2,
)
out_file_umap_lifestage = paste0(out_dir, 'howick_lifestages.png')
ggsave(p, width=16, height=9, file= out_file_umap_lifestage)
## do the same for Hive Data of Erin
hive_dir = '/Users/pmonsieurs/programming/plasmodium_hiveseq/results/seurat/'
hive_data = readRDS(paste0(hive_dir, 'hive_data_nodoublets.rds'))
## do the same for Hive Data of Erin
hive_dir = '/Users/pmonsieurs/programming/plasmodium_hiveseq/results/seurat/'
hive_data = readRDS(paste0(out_dir, "hive_data.with_howick_annot.rds"))
hive_data = readRDS(paste0(hive_dir, "hive_data.with_howick_annot.rds"))
View(hive_data)
## check the dim plot
p = DimPlot(hive_data,
label = FALSE,
reduction='umap',
group.by = 'lifestage',
label.size=4,
pt.size = 0.2,
)
p
# p
out_file_umap_lifestage = paste0(out_dir, 'hive_lifestages.png')
ggsave(p, width=16, height=9, file= out_file_umap_lifestage)
for (time_point in time_points) {
features_select = biomarkers[biomarkers$biomarker.for... == time_point,]$X1
features_select = gsub("_", "-", features_select)
p = FeaturePlot(hive_data, features=features_select, ncol = 5) & scale_color_gradientn(colours = rev(viridis::inferno(20)))
out_file = paste0(out_dir, 'hive_biomarkers_', time_point, '.png')
ggsave(p, width=16, height=9, file= out_file)
}
Idents(hive_data) = hive_data$lifestage
FindAllMarkers(hive_data)
howick_markers = FindAllMarkers(howick_data)
## find biomarkers for the howick data sets
Idents(howick_data) = howick_data$celltype
owick_data$celltype
howick_data$celltype
howick_markers = FindAllMarkers(howick_data)
howick_markers_file = paste0(out_dir, 'howick_markers.xlsx')
write.xlsx(howick_markers, file=howick_markers_file)
Idents(hive_data) = hive_data$lifestage
hive_markers = FindAllMarkers(hive_data)
hive_markers_file = paste0(out_dir, 'hive_markers.xlsx')
type_name = 'rlog_table1'
biomarkers = read.xlsx(biomarkers_files, sheet=type_name)
hive_markers_file = paste0(out_dir, 'hive_markers.xlsx')
write.xlsx(hive_markers, file=hive_markers_file)
?FindAllMarkers
hive_markers = FindAllMarkers(hive_data,
logfc.threshold = 1,
only.pos = TRUE)
hive_markers = FindAllMarkers(hive_data,
logfc.threshold = 0.58,
only.pos = TRUE)
hive_markers_file = paste0(out_dir, 'hive_markers.xlsx')
write.xlsx(hive_markers, file=hive_markers_file)
howick_markers = FindAllMarkers(howick_data,
logfc.threshold = 0.58,
only.pos = TRUE)
howick_markers_file = paste0(out_dir, 'howick_markers.xlsx')
write.xlsx(howick_markers, file=howick_markers_file)
type_name = 'rlog_table1'
# biomarkers = read.xlsx(biomarkers_files, sheet="no_rlog")
# biomarkers = read.xlsx(biomarkers_files, sheet="rlog_table1")
biomarkers = read.xlsx(biomarkers_files, sheet=type_name)
out_dir = '/Users/pmonsieurs/programming/plasmodium_10X_Katlijn/results/biomarkers_timeseries/'
biomarkers
for (time_point in time_points) {
features_select = biomarkers[biomarkers$biomarker.for... == time_point,]$X1
features_select = gsub("_", "-", features_select)
p = FeaturePlot(howick_data, features=features_select, ncol = 5) & scale_color_gradientn(colours = rev(viridis::inferno(20)))
out_file = paste0(out_dir, 'howick_biomarkers_', type_name, '_', time_point, '.png')
ggsave(p, width=16, height=9, file= out_file)
}
# biomarkers = read.xlsx(biomarkers_files, sheet="no_rlog")
# biomarkers = read.xlsx(biomarkers_files, sheet="rlog_table1")
biomarkers = read.xlsx(biomarkers_files, sheet=type_name)
# biomarkers = read.xlsx(biomarkers_files, sheet="no_rlog")
# biomarkers = read.xlsx(biomarkers_files, sheet="rlog_table1")
biomarkers = read.xlsx(biomarkers_files, sheet=type_name)
biomarkers
for (time_point in time_points) {
features_select = biomarkers[biomarkers$biomarker.for... == time_point,]$X1
features_select = gsub("_", "-", features_select)
p = FeaturePlot(howick_data, features=features_select, ncol = 5) & scale_color_gradientn(colours = rev(viridis::inferno(20)))
out_file = paste0(out_dir, 'howick_biomarkers_', type_name, '_', time_point, '.png')
ggsave(p, width=16, height=9, file= out_file)
}
biomarkers[biomarkers$biomarker.for... == time_point,]$X1
biomarkers
time_points = unique(biomarkers$biomarker.for...)
time_points
biomarkers[biomarkers$biomarker.for... == time_point,]$X1
time_point
time_points = unique(biomarkers$biomarker.for...)
for (time_point in time_points) {
features_select = biomarkers[biomarkers$biomarker.for... == time_point,]$X1
features_select = gsub("_", "-", features_select)
p = FeaturePlot(howick_data, features=features_select, ncol = 5) & scale_color_gradientn(colours = rev(viridis::inferno(20)))
out_file = paste0(out_dir, 'howick_biomarkers_', type_name, '_', time_point, '.png')
ggsave(p, width=16, height=9, file= out_file)
}
for (time_point in time_points) {
features_select = biomarkers[biomarkers$biomarker.for... == time_point,]$X1
features_select = gsub("_", "-", features_select)
p = FeaturePlot(hive_data, features=features_select, ncol = 5) & scale_color_gradientn(colours = rev(viridis::inferno(20)))
out_file = paste0(out_dir, 'hive_biomarkers_', type_name, '_', time_point, '.png')
ggsave(p, width=16, height=9, file= out_file)
}
type_name = 'rlog_table2'
# biomarkers = read.xlsx(biomarkers_files, sheet="no_rlog")
# biomarkers = read.xlsx(biomarkers_files, sheet="rlog_table1")
biomarkers = read.xlsx(biomarkers_files, sheet=type_name)
time_points = unique(biomarkers$biomarker.for...)
for (time_point in time_points) {
features_select = biomarkers[biomarkers$biomarker.for... == time_point,]$X1
features_select = gsub("_", "-", features_select)
p = FeaturePlot(howick_data, features=features_select, ncol = 5) & scale_color_gradientn(colours = rev(viridis::inferno(20)))
out_file = paste0(out_dir, 'howick_biomarkers_', type_name, '_', time_point, '.png')
ggsave(p, width=16, height=9, file= out_file)
}
for (time_point in time_points) {
features_select = biomarkers[biomarkers$biomarker.for... == time_point,]$X1
features_select = gsub("_", "-", features_select)
p = FeaturePlot(hive_data, features=features_select, ncol = 5) & scale_color_gradientn(colours = rev(viridis::inferno(20)))
out_file = paste0(out_dir, 'hive_biomarkers_', type_name, '_', time_point, '.png')
ggsave(p, width=16, height=9, file= out_file)
}
type_name = 'rlog_table3'
# biomarkers = read.xlsx(biomarkers_files, sheet="no_rlog")
# biomarkers = read.xlsx(biomarkers_files, sheet="rlog_table1")
biomarkers = read.xlsx(biomarkers_files, sheet=type_name)
time_points = unique(biomarkers$biomarker.for...)
for (time_point in time_points) {
features_select = biomarkers[biomarkers$biomarker.for... == time_point,]$X1
features_select = gsub("_", "-", features_select)
p = FeaturePlot(howick_data, features=features_select, ncol = 5) & scale_color_gradientn(colours = rev(viridis::inferno(20)))
out_file = paste0(out_dir, 'howick_biomarkers_', type_name, '_', time_point, '.png')
ggsave(p, width=16, height=9, file= out_file)
}
